name: Pipeline spotMusic

on:
  push:
    branches:
      - main

jobs:
  Tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Requirements
        run:  pip install Flask flask-wtf flask-cors PyMySQL cryptography gunicorn

  Build:
    needs: Tests
    name: Build
    runs-on: ubuntu-latest
    steps: 

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Docker Login
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: | 
          echo '${{ secrets.GCP_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/

      - name: Build Image & Push
        env: 
          ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
        run: | 
          docker build -t ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest .
          docker push ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest
  
  deploy:
    name: Deploy Gcloud HTTP
    runs-on: ubuntu-latest
    needs: build
    env:
      IMAGE: ${{ secrets.IMAGE }}
      MS_NAME: ${{ secrets.APPLICATION }}
      REGION: ${{ secrets.REGION }}
      ENTRY_POINT: http
      DB_LOCAL_HOST: =  ${{ secrets.DB_LOCAL_HOST }}
      CLOUD_SQL_USERNAME:  ${{ secrets.CLOUD_SQL_USERNAME }}
      CLOUD_SQL_PASSWORD: = ${{ secrets.CLOUD_SQL_PASSWORD }}
      CLOUD_SQL_DATABASE_NAME: ${{ secrets.CLOUD_SQL_PASSWORD }}
      CLOUD_SQL_CONNECTION_NAME:  ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
      VPC_CONNECTOR:  ${{ secrets.VPC_CONNECTOR }}


    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy http server
        run: |
          gcloud run deploy $MS_NAME \
            --image $IMAGE \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --vpc-connector $VPC_CONNECTOR \
            --update-env-vars "ENTRY_POINT=$ENTRY_POINT,DB_LOCAL_HOST=$DB_LOCAL_HOST,CLOUD_SQL_USERNAME=$CLOUD_SQL_USERNAME,CLOUD_SQL_PASSWORD=$CLOUD_SQL_PASSWORD,CLOUD_SQL_DATABASE_NAME=$CLOUD_SQL_DATABASE_NAME,CLOUD_SQL_CONNECTION_NAME=$CLOUD_SQL_CONNECTION_NAME" \


